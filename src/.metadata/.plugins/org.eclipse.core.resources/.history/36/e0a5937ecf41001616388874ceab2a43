package application;

import javafx.application.Application;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.FlowPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.scene.text.Font;
import javafx.stage.Stage;
 
public class Main extends Application 
{
	//controls needed for app:
    CheckBox chksport1, chksport2, chksport3;
    Label lbltotal, lbllist, lblMenu, lblFile, lblPlugin;
   
   //2 VBoxes for the labels and checkboxes 
    VBox vbchecks, vblabels, vbmenu;
    
    public static void main(String[] args) {
        launch(args);
    };
 
    @Override
    public void start(Stage stage) {
    	MenuBar menuBar = new MenuBar();
    	
    	// --- Menu Home
        Menu menuHome = new Menu("Home");
        MenuItem menuItemHome = new MenuItem("Home");
        menuItemHome.setOnAction(new EventHandler<ActionEvent>() {         
             @Override
             public void handle(ActionEvent event) {
            	//vbox for checkboxes     
                 vbchecks = new VBox();
                 vbchecks.setSpacing(10);
                 vbchecks.setPadding(new Insets(20));
                 
                 //vbox for labels
                 vblabels = new VBox();
                 vblabels.setSpacing(10);
                 vblabels.setPadding(new Insets(20));
                 
               //make 3 checkboxes
                 chksport1=new CheckBox("Hockey");
                 chksport2=new CheckBox("Baseball");
                 chksport3=new CheckBox("Football");
                 
                  //make 2 labels
                 lbltotal=new Label("Sports chosen: 0");
                 lbllist=new Label("None");
                 
               //add all things to vboxes
                 vbchecks.getChildren().addAll(chksport1, chksport2, chksport3);
                 vblabels.getChildren().addAll(lbltotal, lbllist);
                 
               //attach click-method to all 3 checkboxes
                 chksport1.setOnAction(e -> handleButtonAction(e));
                 chksport2.setOnAction(e -> handleButtonAction(e));
                 chksport3.setOnAction(e -> handleButtonAction(e));
                 
               //create main container
                 FlowPane root = new FlowPane();
                 root.setHgap(20);
                 root.getChildren().addAll(menuBar, vbchecks, vblabels);
                 String image = Main.class.getResource(("/application/static/img/LogoCookieSCookout.png").toString()).toExternalForm();
                 root.setStyle("-fx-background-image: url('" + image + "'); " +
                            "-fx-background-position: center center; " +
                            "-fx-background-repeat: stretch;");    
                 Scene scene = new Scene(root, 750, 750);
                 stage.setScene(scene);
                 stage.show();
             }
        });
        menuHome.getItems().add(menuItemHome);
        
        // --- Menu File
        Menu menuFile = new Menu("File");
        MenuItem menuItemFile = new MenuItem("File");
        menuItemFile.setOnAction(new EventHandler<ActionEvent>() {
             @Override
             public void handle(ActionEvent event) {
            	//Creating a GridPane container
            	 GridPane grid = new GridPane();
            	 grid.setPadding(new Insets(10, 10, 10, 10));
            	 grid.setVgap(5);
            	 grid.setHgap(5);
            	 //Defining the Name text field
            	 final TextField name = new TextField();
            	 name.setPromptText("Enter your first name.");
            	 name.setPrefColumnCount(10);
            	 name.getText();
            	 GridPane.setConstraints(name, 0, 0);
            	 grid.getChildren().add(name);
            	 //Defining the Last Name text field
            	 final TextField lastName = new TextField();
            	 lastName.setPromptText("Enter your last name.");
            	 GridPane.setConstraints(lastName, 0, 1);
            	 grid.getChildren().add(lastName);
            	 //Defining the Comment text field
            	 final TextField comment = new TextField();
            	 comment.setPrefColumnCount(15);
            	 comment.setPromptText("Enter your comment.");
            	 GridPane.setConstraints(comment, 0, 2);
            	 grid.getChildren().add(comment);
            	 //Defining the Submit button
            	 Button submit = new Button("Submit");
            	 GridPane.setConstraints(submit, 1, 0);
            	 grid.getChildren().add(submit);
            	 //Defining the Clear button
            	 Button clear = new Button("Clear");
            	 GridPane.setConstraints(clear, 1, 1);
            	 grid.getChildren().add(clear);
            	 
            	//Adding a Label
            	 final Label label = new Label();
            	 GridPane.setConstraints(label, 0, 3);
            	 GridPane.setColumnSpan(label, 2);
            	 grid.getChildren().add(label);
            	 
            	//Setting an action for the Submit button
            	 submit.setOnAction(new EventHandler<ActionEvent>() {

            	 @Override
            	     public void handle(ActionEvent e) {
            	         if ((comment.getText() != null && !comment.getText().isEmpty())) {
            	             label.setText(name.getText() + " " + lastName.getText() + ", "
            	                 + "thank you for your comment!");
            	         } else {
            	             label.setText("You have not left a comment.");
            	         }
            	      }
            	  });
            	  
            	 //Setting an action for the Clear button
            	 clear.setOnAction(new EventHandler<ActionEvent>() {

            	 @Override
            	     public void handle(ActionEvent e) {
            	         name.clear();
            	         lastName.clear();
            	         comment.clear();
            	         label.setText(null);
            	     }
            	 });
                 
               //create main container
                 FlowPane root = new FlowPane();
                 root.setHgap(20);
                 root.getChildren().addAll(menuBar, grid, name, comment, submit, clear);
                 String image = Main.class.getResource(("/application/static/img/LogoCookieSCookout.png").toString()).toExternalForm();
                 root.setStyle("-fx-background-image: url('" + image + "'); " +
                            "-fx-background-position: center center; " +
                            "-fx-background-repeat: stretch;");    
                 Scene scene = new Scene(root, 750, 750);
                 stage.setScene(scene);
                 stage.show();
             }
        });
        menuFile.getItems().add(menuItemFile);
        
        // --- Menu Plugin
        Menu menuPlugin = new Menu("Plugin");
        MenuItem menuItemPlugin = new MenuItem("Plugin");
        menuItemPlugin.setOnAction(new EventHandler<ActionEvent>() {
             @Override
             public void handle(ActionEvent event) {
               //create main container
                 FlowPane root = new FlowPane();
                 root.setHgap(20);
                 root.getChildren().addAll(menuBar);
                 String image = Main.class.getResource(("/application/static/img/LogoCookieSCookout.png").toString()).toExternalForm();
                 root.setStyle("-fx-background-image: url('" + image + "'); " +
                            "-fx-background-position: center center; " +
                            "-fx-background-repeat: stretch;");    
                 Scene scene = new Scene(root, 750, 750);
                 stage.setScene(scene);
                 stage.show();
             }
        });
        menuPlugin.getItems().add(menuItemPlugin);
        
        // --- Menu Help
        Menu menuHelp = new Menu("Help");
        MenuItem menuItemHelp = new MenuItem("Help");
        menuItemHelp.setOnAction(new EventHandler<ActionEvent>() {       
             @Override
             public void handle(ActionEvent event) {
                 //vbox for labels
                 vblabels = new VBox();
                 vblabels.setSpacing(10);
                 vblabels.setPadding(new Insets(20));
                 
                  //make 2 labels
                 lblMenu = new Label("Menu");
                 lblFile = new Label("File");
                 lblPlugin = new Label("Plugin");
                 
                 vblabels.getChildren().addAll(lblMenu, lblFile, lblPlugin);
                 
                 
               //create main container
                 FlowPane root = new FlowPane();
                 root.setHgap(20);
                 root.getChildren().addAll(menuBar, vblabels);
                 String image = Main.class.getResource(("/application/static/img/LogoCookieSCookout.png").toString()).toExternalForm();
                 root.setStyle("-fx-background-image: url('" + image + "'); " +
                            "-fx-background-position: center center; " +
                            "-fx-background-repeat: stretch;");    
                 Scene scene = new Scene(root, 750, 750);
                 stage.setScene(scene);
                 stage.show();
             }
        });
        menuHelp.getItems().add(menuItemHelp);
    	
        menuBar.getMenus().addAll(menuHome, menuFile, menuPlugin, menuHelp);
        
        //create main container
        FlowPane root = new FlowPane();
        root.setHgap(20);
        root.getChildren().add(menuBar);
        String image = Main.class.getResource(("/application/static/img/LogoCookieSCookout.png").toString()).toExternalForm();
        root.setStyle("-fx-background-image: url('" + image + "'); " +
                   "-fx-background-position: center center; " +
                   "-fx-background-repeat: stretch;");
        Scene scene = new Scene(root, 750, 750);
        stage.setTitle("CookiesCookout");
        stage.setScene(scene);
        stage.show();
    };
    
    private void handleButtonAction(ActionEvent e) {
        int count=0;
        String choices="";
        if(chksport1.isSelected()){
            count++;
            choices+=chksport1.getText() + "\n";
         }
        if(chksport2.isSelected()){
            count++;
            choices+=chksport2.getText() + "\n";
         }
        if(chksport3.isSelected()){
            count++;
            choices+=chksport3.getText() + "\n";
         }
       lbltotal.setText("Sports chosen: " + count);
       lbllist.setText(choices);
     };
} 
